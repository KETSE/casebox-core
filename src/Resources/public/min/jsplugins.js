Ext.namespace('CB.plugin');Ext.onReady(function(){var plugins=CB.browser.view.Grid.prototype.plugins||[];plugins.push({ptype:'CBPluginDisplayColumns'});CB.browser.view.Grid.prototype.plugins=plugins;});Ext.define('CB.plugin.DisplayColumns',{extend:'Ext.util.Observable',alias:'plugin.CBPluginDisplayColumns',lastState:'',init:function(owner){this.owner=owner;this.grid=owner.grid;this.store=owner.grid.store;this.defaultColumns=owner.grid.defaultColumns;this.reader=this.store.proxy.reader;this.model=this.store.getModel();this.defaultFieldNames=this.extractFieldNames(this.model.fields);this.proxy=this.store.proxy;this.owner.on('activate',this.onActivateView,this);this.store.on('load',this.onStoreLoad,this);this.store.on('manualload',this.onStoreLoad,this);this.store.on('clear',this.onStoreClear,this);this.store.on('load',this.clearDisableStateSaveFlag,this,{defer:1000});},onActivateView:function(view){this.lastState='';},onStoreClear:function(store){this.grid.disableStateSave=true;},onStoreLoad:function(store,records,successful,eOpts){if(this.owner.getEl().isVisible(true)!==true){return;}
var rez=store.proxy.reader.rawData,view=Ext.valueFrom(rez.view,{});this.grid.disableStateSave=true;if(!Ext.isEmpty(view.sort)){var sorters=this.store.getSorters();sorters.suspendEvents();sorters.clear();sorters.addSort(view.sort.property,view.sort.direction);sorters.resumeEvents(true);}
this.currentColumns=rez.DC||[];var currentState=view.type+
Ext.util.JSON.encode(this.currentColumns)+
(view.sort?Ext.util.JSON.encode(view.sort):'');if(this.lastState!==currentState){var storeFields=this.getNewMetadata();store.setFields(storeFields);this.lastState=currentState;var nc=this.getNewColumns();this.grid.reconfigure(null,nc);}
var groupFeature=this.grid.view.features[0];if(!Ext.isEmpty(view.group)&&!Ext.isEmpty(view.group.property)){store.remoteSort=false;if(groupFeature.disabled){var menuItem=groupFeature.getMenuItem('group');if(Ext.isEmpty(menuItem)){menuItem={parentMenu:this.grid.view.headerCt.getMenu()};}
if(Ext.isEmpty(menuItem.parentMenu.activeHeader)){menuItem.parentMenu.activeHeader=this.grid.getVisibleColumnManager().getHeaderByDataIndex(view.group.property);}
if(!Ext.isEmpty(menuItem.parentMenu.activeHeader)){groupFeature.onGroupMenuItemClick(menuItem,eOpts);}}
var groupDir=Ext.valueFrom(view.group.direction,'ASC');if(store.getGroupDir!=groupDir){store.group('group',groupDir);}}else if(Ext.isEmpty(view.group)&&!groupFeature.disabled){store.remoteSort=false;groupFeature.disable();}},clearDisableStateSaveFlag:function(){delete this.grid.disableStateSave;this.store.remoteSort=true;},getNewMetadata:function(){var i,key,fieldData,rez=Ext.apply([],CB.DB.defaultItemFields),currentColumns=Ext.apply({},this.currentColumns);for(i=0;i<rez.length;i++){fieldData=rez[i];if(Ext.isString(fieldData)){key=fieldData;fieldData={name:key};}else{key=rez[i].name;}
if(Ext.isDefined(currentColumns[key])){rez[i]=Ext.copyTo(fieldData,currentColumns[key],['type','sortType']);rez[i].convert=null;delete currentColumns[key];}}
Ext.iterate(currentColumns,function(key,value,obj){var field={name:key,title:Ext.valueFrom(value.title,'No title')};rez.push(field);},this);return rez;},getNewColumns:function(){var rez=[],currentColumns=Ext.apply({},this.currentColumns),i,refs={},emptyCurrentColumns=(Ext.encode(currentColumns)==='{}');for(i=0;i<this.defaultColumns.length;i++){refs[this.defaultColumns[i].dataIndex]=this.defaultColumns[i];}
Ext.iterate(currentColumns,function(key,value,obj){var column=value;if(key!=='remove'){column.dataIndex=key;column.header=Ext.valueFrom(column.header,column.title);switch(column.type){case'date':column.renderer=App.customRenderers.datetime;break;default:}
if(this.owner.columnSortOverride){column.sort=this.owner.columnSortOverride;}
if(Ext.isDefined(refs[key])){Ext.applyIf(column,refs[key]);}
rez.push(column);}},this);if(Ext.isEmpty(rez)){rez=[refs.name];}
var changed=rez.length>1;var t;i=0;while(changed||(i<(rez.length-1))){changed=false;if((!Ext.isDefined(rez[i].idx)&&Ext.isDefined(rez[i+1].idx))||(rez[i].idx>rez[i+1].idx)){changed=true;t=rez[i];rez[i]=rez[i+1];rez[i+1]=t;i=-1;}
i++;}
return rez;},extractFieldNames:function(fieldsArray){var rez=[];Ext.each(fieldsArray,function(i){if(Ext.isObject(i)){rez.push(i.name);}else{rez.push(i);}},this);return rez;}});;Ext.namespace('CB.plugin.Export');CB.plugin.Export.init=function(){App.on('browserinit',function(c){var p=Ext.apply([],Ext.valueFrom(c.plugins,[]));p.push({ptype:'CBPluginExportButton'});c.plugins=p;});};Ext.onReady(CB.plugin.Export.init);;Ext.namespace('CB.plugin.Export');Ext.define('CB.plugin.Export.Button',{extend:'CB.plugin.CustomInterface',alias:'plugin.CBPluginExportButton',init:function(owner){CB.plugin.Export.Button.superclass.init.call(this,arguments);this.owner=owner;owner.on('exportrecords',this.onExportRecordsEvent,this);},onExportClick:function(b,e){var params=Ext.clone(this.owner.params);delete params.lastQuery;params.from='grid';window.open('/'+App.config.coreName+'/get/?export='+Ext.encode(params));},onExportRecordsEvent:function(cmp,e){e.stopPropagation();this.onExportClick();}});;Ext.namespace('CB.plugin.Search');CB.plugin.Search.init=function(){};;Ext.namespace('CB.plugin.Search');Ext.define('CB.plugin.Search.Button',{extend:'CB.plugin.CustomInterface',alias:'plugin.CBPluginSearchButton',ptype:'CBPluginSearchButton',init:function(owner){this.historyData={};this.callParent(arguments);this.owner=owner;this.button=new Ext.Button({qtip:L.Search,itemId:'pluginsearchbutton',arrowVisible:false,iconCls:'ib-search-negative',scale:'large',allowDepress:false,hidden:true,width:20,menuAlign:'tl-tr',menu:[],listeners:{menushow:CB.ViewPort.prototype.onButtonMenuShow}});owner.insert(3,this.button);if(App.initialized){this.loadSearchTemplates();}else{App.on('cbinit',this.loadSearchTemplates,this);}},onButtonClick:function(b,e){var data=b.menu?b.menu.items.getAt(0).config.data:b.config.data,config={xtype:'CBSearchEditWindow',id:'sew'+data.template_id};config.data=Ext.apply({},data);var w=App.openWindow(config);if(!w.existing){w.alignTo(App.mainViewPort.getEl(),'bl-bl?');}
delete w.existing;},loadSearchTemplates:function(){if(Ext.isEmpty(CB.DB.templates)){return;}
var menu=this.button.menu;menu.removeAll(true);var templates=CB.DB.templates.query('type','search');templates.each(function(t){menu.add({iconCls:t.data.iconCls,data:{template_id:t.data.id},text:t.data.title,scope:this,handler:this.onButtonClick});},this);this.button.setVisible(menu.items.getCount()>0);}});;Ext.namespace('CB.plugin.Search');Ext.define('CB.plugin.Search.Form',{extend:'Ext.Panel',title:L.Search,id:'SearchTab',iconCls:'icon-search',closable:true,scrollable:true,tbarCssClass:'x-panel-white',params:{},initComponent:function(){this.actions={search:new Ext.Button({text:L.Search,iconAlign:'top',iconCls:'ib-search',scale:'large',scope:this,handler:this.onSearchButtonClick})};this.objectsStore=new CB.DB.ObjectsStore();this.grid=Ext.create('CBVerticalEditGrid',{refOwner:this,autoHeight:true});Ext.apply(this,{data:{template_id:this.data.template_id},tbar:[this.actions.search],items:[this.grid],listeners:{scope:this,beforerender:this.onAfterRender}});CB.plugin.Search.Form.superclass.initComponent.apply(this,arguments);},onSearchButtonClick:function(){this.grid.readValues();var t=App.openUniqueTabbedWidget('CBPluginSearchResultForm',null,{data:this.data});if(t){t.setParams(this.data);}},onAfterRender:function(){for(var i in this.grid.colModel.config){var el=this.grid.colModel.config[i];if(el.dataIndex==='info'){el.editor=new Ext.form.ComboBox({typeAhead:true,triggerAction:'all',editable:true,selectOnTab:true,store:['','AND','OR','NOT'],lazyRender:true,listClass:'x-combo-list-small'});el.header=L.SearchLogic;}}
this.grid.reload();}});;Ext.namespace('CB.plugin.Search');Ext.define('CB.plugin.Search.ResultForm',{extend:'CB.browser.ViewContainer',title:L.SearchResults,iconCls:'icon-search',closable:true,initComponent:function(){var config={};if(CB.plugin.config&&CB.plugin.config.Search){config=CB.plugin.config.Search;}
Ext.apply(this,config);CB.plugin.Search.ResultForm.superclass.initComponent.apply(this,arguments);if(!Ext.isEmpty(this.handler)){var a=this.handler.split('.');this.store.proxy.setApi(Ext.data.Api.actions.read,window[a[0]][a[1]]);}}});